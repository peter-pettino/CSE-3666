# Addition of decimal strings

# strings are stored in global data section 
        .data   
dst:    .space  128
str1:   .space  128
str2:   .space  128

# instructions are in text section
        .text
main: 
        # load adresses of strings into s1, s2, and s3
        # s3 is dst, where we store the result 

        lui     s3, 0x10010 
        addi    s1, s3, 128
        addi    s2, s1, 128

        # read the first number as a string
        addi    a0, s1, 0
        addi    a1, x0, 100
        addi    a7, x0, 8
        ecall

        # read the second number as a string
        addi    a0, s2, 0
        addi    a1, x0, 100
        addi    a7, x0, 8
        ecall

        # useful constants
        addi    a4, x0, '0'
        addi    a5, x0, 10

        #TODO
        # write a loop to find out the number of decimal digits in str1
        # the loop searches for the first character that is less than '0' 

        # Note that we assume str1, str2, and dst have the same number of 
        # decimal digits. 

        # We then write a loop to add str1 and str2, and save the result in 
        # dst. 
        # Remember that dst should have a terminating NULL.

        # find the length
        add	t0, x0, s1	# t0 = s1
        addi	s4, s4, -1	# s4 = -1

loop1:	lb	t1, 0(t0)	# load data from t0 to t1
	blt	t1, a4, loop2	# if(t1 < "0") goto next
	addi	t0, t0, 1	# increment 1 byte
	
	addi	s4, s4, 1	# increment counter
	beq	x0, x0, loop1	# goto loop1
	

loop2:	blt	s4, x0, print	# if s4 < 0 goto print

	add	t0, s4, s1	# t0 = s4 + s1
	add	t1, s4, s2	# t1 = s4 + s2
	add	t2, s4, s3	# t2 = s4 + s3

	lb	t0, 0(t0)	# load data from t0 to t0
	lb	t1, 0(t1)	# load data from t1 to t1
	
	sub	t0, t0, a4	# convert t1 decimal
	sub	t1, t1, a4	# convert t1 to decimal
	
	add	t3, t0, t1	# t3 = t0 + t1
	add	t3, t3, t4	# add carry to t3 if needed
	add	t4, x0, x0	# reset carry
	
	blt	t3, a5	skip	# if t3 < 10 goto skip
	sub	t3, t3, a5	# t3 -= 10
	addi	t4, x0, 1	# initialize carry
	
skip:	add	t3, t3, a4	# convert t3 to ascii
	sb	t3, 0(t2)	# store t3 to address of t2
	
	addi	s4, s4, -1	# decrement loop counter
	beq	x0, x0, loop2	# goto loop2
	

        # end of the loop
        # print the result
print:
        addi    a0, s3, 0
        addi    a7, x0, 4
        ecall

        # exit
        addi    a7, x0, 10
        ecall
